`timescale 1ns / 1ps

module jk_flip_flop (
    input J,
    input K,
    input clk,
    output reg Q,
    output reg Qn
);
    always @(posedge clk) begin
        case ({J, K})
            2'b00: ;
            2'b01: begin
                Q = 1'b0;
                Qn = 1'b1;
            end
            2'b10: begin
                Q = 1'b1;
                Qn = 1'b0;
            end
            2'b11: begin
                Q = ~Q;
                Qn = ~Qn;
            end
        endcase
    end
endmodule


TESTBENCH

`timescale 1ns / 1ps

module tb_jk_flip_flop;
    reg J;
    reg K;
    reg clk;
    wire Q;
    wire Qn;

    jk_flip_flop uut (
        .J(J),
        .K(K),
        .clk(clk),
        .Q(Q),
        .Qn(Qn)
    );

    initial begin
        clk = 0;
        forever #5 clk = ~clk;
    end

    initial begin
        $display("Time\tJ\tK\tQ\tQn");
        J = 0; K = 0; #10;
        J = 0; K = 1; #10;
        J = 1; K = 0; #10;
        J = 1; K = 1; #10;
        J = 0; K = 0; #10;
        $finish;
    end
endmodule
